{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { ComputedFields, defineDocumentType, makeSource } from 'contentlayer/source-files';\nimport readingTime from 'reading-time';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypeCodeTitles from 'rehype-code-titles';\nimport rehypePrismPlus from 'rehype-prism-plus';\nimport rehypeProbeImageSize from 'rehype-probe-image-size';\nimport rehypeSlug from 'rehype-slug';\nimport rehypeTwemojify from 'rehype-twemojify';\nimport remarkGemoji from 'remark-gemoji';\nimport remarkGfm from 'remark-gfm';\nimport remarkTextr from 'remark-textr';\nimport smartquotes from 'smartquotes-ts';\n\nfunction trademarks(input: string) {\n  input = input.replace(/\\((c|C)\\)/gim, '\u00A9');\n  input = input.replace(/\\((r|R)\\)/gim, '\u00AE');\n  input = input.replace(/\\((p|P)\\)/gim, '\u2117');\n  input = input.replace(/\\((tm|TM)\\)/gim, '\u2122');\n  return input;\n}\n\nfunction quotes(input: string) {\n  return smartquotes.string(input);\n}\n\nfunction ellipses(input: string) {\n  return input.replaceAll('...', '\\u2026');\n}\n\nfunction dashes(input: string) {\n  return input.replaceAll('---', '\u2014').replaceAll('--', '\u2013');\n}\n\nconst computedFields: ComputedFields = {\n  readingTime: {\n    type: 'json',\n    resolve: (doc) => readingTime(doc.body.raw, { wordsPerMinute: 275 })\n  },\n  wordCount: {\n    type: 'number',\n    resolve: (doc) => doc.body.raw.split(/\\s+/gu).length\n  },\n  tweetIds: {\n    type: 'json',\n    resolve: (doc) => {\n      const tweetMatches = doc.body.raw.match(/<StaticTweet\\sid=\"[0-9]+\"\\s\\/>/g);\n      const tweetIDs = tweetMatches?.map((tweet: string) => tweet.match(/[0-9]+/g)![0]);\n      return tweetIDs ?? [];\n    }\n  },\n  slug: {\n    type: 'string',\n    resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, '')\n  }\n};\n\nconst Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: 'posts/**/*.mdx',\n  contentType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true },\n    publishedAt: { type: 'string', required: true },\n    summary: { type: 'string', required: true }\n  },\n  computedFields\n}));\n\nconst contentLayerConfig = makeSource({\n  contentDirPath: 'data',\n  documentTypes: [Post],\n  mdx: {\n    remarkPlugins: [\n      remarkGfm,\n      remarkGemoji,\n      [remarkTextr, { plugins: [dashes, ellipses, trademarks, quotes] }]\n    ],\n    rehypePlugins: [\n      rehypeSlug,\n      [\n        rehypeAutolinkHeadings,\n        {\n          properties: {\n            className: ['anchor']\n          },\n          behavior: 'append'\n        }\n      ],\n      rehypeCodeTitles,\n      [rehypePrismPlus, { showLineNumbers: true }],\n      [rehypeProbeImageSize as any, { staticDir: 'public' }],\n      [\n        rehypeTwemojify,\n        {\n          params: { w: 32, q: 100 },\n          twemoji: { size: 'svg', baseUrl: '/static/images/twemoji' },\n          exclude: ['\u00A9', '\u00AE', '\u2122', '\u2117', '\u21A9']\n        }\n      ]\n    ]\n  }\n});\n\nexport default contentLayerConfig;\n"],
  "mappings": ";AAAA,SAAyB,oBAAoB,kBAAkB;AAC/D,OAAO,iBAAiB;AACxB,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,qBAAqB;AAC5B,OAAO,0BAA0B;AACjC,OAAO,gBAAgB;AACvB,OAAO,qBAAqB;AAC5B,OAAO,kBAAkB;AACzB,OAAO,eAAe;AACtB,OAAO,iBAAiB;AACxB,OAAO,iBAAiB;AAExB,SAAS,WAAW,OAAe;AACjC,UAAQ,MAAM,QAAQ,gBAAgB,MAAG;AACzC,UAAQ,MAAM,QAAQ,gBAAgB,MAAG;AACzC,UAAQ,MAAM,QAAQ,gBAAgB,QAAG;AACzC,UAAQ,MAAM,QAAQ,kBAAkB,QAAG;AAC3C,SAAO;AACT;AAEA,SAAS,OAAO,OAAe;AAC7B,SAAO,YAAY,OAAO,KAAK;AACjC;AAEA,SAAS,SAAS,OAAe;AAC/B,SAAO,MAAM,WAAW,OAAO,QAAQ;AACzC;AAEA,SAAS,OAAO,OAAe;AAC7B,SAAO,MAAM,WAAW,OAAO,QAAG,EAAE,WAAW,MAAM,QAAG;AAC1D;AAEA,IAAM,iBAAiC;AAAA,EACrC,aAAa;AAAA,IACX,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK,KAAK,EAAE,gBAAgB,IAAI,CAAC;AAAA,EACrE;AAAA,EACA,WAAW;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,IAAI,MAAM,OAAO,EAAE;AAAA,EAChD;AAAA,EACA,UAAU;AAAA,IACR,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ;AAChB,YAAM,eAAe,IAAI,KAAK,IAAI,MAAM,iCAAiC;AACzE,YAAM,WAAW,cAAc,IAAI,CAAC,UAAkB,MAAM,MAAM,SAAS,EAAG,CAAC,CAAC;AAChF,aAAO,YAAY,CAAC;AAAA,IACtB;AAAA,EACF;AAAA,EACA,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAAA,EAChE;AACF;AAEA,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACrC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC5C;AAAA,EACA;AACF,EAAE;AAEF,IAAM,qBAAqB,WAAW;AAAA,EACpC,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe;AAAA,MACb;AAAA,MACA;AAAA,MACA,CAAC,aAAa,EAAE,SAAS,CAAC,QAAQ,UAAU,YAAY,MAAM,EAAE,CAAC;AAAA,IACnE;AAAA,IACA,eAAe;AAAA,MACb;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,YAAY;AAAA,YACV,WAAW,CAAC,QAAQ;AAAA,UACtB;AAAA,UACA,UAAU;AAAA,QACZ;AAAA,MACF;AAAA,MACA;AAAA,MACA,CAAC,iBAAiB,EAAE,iBAAiB,KAAK,CAAC;AAAA,MAC3C,CAAC,sBAA6B,EAAE,WAAW,SAAS,CAAC;AAAA,MACrD;AAAA,QACE;AAAA,QACA;AAAA,UACE,QAAQ,EAAE,GAAG,IAAI,GAAG,IAAI;AAAA,UACxB,SAAS,EAAE,MAAM,OAAO,SAAS,yBAAyB;AAAA,UAC1D,SAAS,CAAC,QAAK,QAAK,UAAK,UAAK,QAAG;AAAA,QACnC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAED,IAAO,8BAAQ;",
  "names": []
}
